"use strict";(self.webpackChunksilkforest_web=self.webpackChunksilkforest_web||[]).push([[1350],{8389:(e,t,n)=>{n.d(t,{T:()=>l});var r=n(3813),i=n(5186);function l(e,t,n){const l=n||{},s=(0,i.C)(l.ignore||[]),c=function(e){const t=[];if(!Array.isArray(e))throw new TypeError("Expected find and replace tuple or list of tuples");const n=!e[0]||Array.isArray(e[0])?e:[e];let r=-1;for(;++r<n.length;){const e=n[r];t.push([o(e[0]),u(e[1])])}return t}(t);let f=-1;for(;++f<c.length;)(0,r.VG)(e,"text",p);function p(e,t){let n,r=-1;for(;++r<t.length;){const e=t[r],i=n?n.children:void 0;if(s(e,i?i.indexOf(e):void 0,n))return;n=e}if(n)return function(e,t){const n=t[t.length-1],r=c[f][0],i=c[f][1];let l=0;const o=n.children.indexOf(e);let u=!1,s=[];r.lastIndex=0;let p=r.exec(e.value);for(;p;){const n=p.index,o={index:p.index,input:p.input,stack:[...t,e]};let c=i(...p,o);if("string"==typeof c&&(c=c.length>0?{type:"text",value:c}:void 0),!1===c?r.lastIndex=n+1:(l!==n&&s.push({type:"text",value:e.value.slice(l,n)}),Array.isArray(c)?s.push(...c):c&&s.push(c),l=n+p[0].length,u=!0),!r.global)break;p=r.exec(e.value)}u?(l<e.value.length&&s.push({type:"text",value:e.value.slice(l)}),n.children.splice(o,1,...s)):s=[e];return o+s.length}(e,t)}}function o(e){return"string"==typeof e?new RegExp(function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}(e),"g"):e}function u(e){return"function"==typeof e?e:function(){return e}}}}]);