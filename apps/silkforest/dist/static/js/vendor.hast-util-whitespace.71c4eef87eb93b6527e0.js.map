{"version":3,"file":"static/js/vendor.hast-util-whitespace.71c4eef87eb93b6527e0.js","mappings":"iIAMA,MAAMA,EAAK,eAaJ,SAASC,EAAWC,GACzB,MAAwB,iBAAVA,EACK,SAAfA,EAAMC,MACJC,EAAMF,EAAMG,OAEdD,EAAMF,EACZ,CAMA,SAASE,EAAMC,GACb,MAAiC,KAA1BA,EAAMC,QAAQN,EAAI,GAC3B,C","sources":["webpack://silkforest-web/../../node_modules/hast-util-whitespace/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n"],"names":["re","whitespace","thing","type","empty","value","replace"],"sourceRoot":""}