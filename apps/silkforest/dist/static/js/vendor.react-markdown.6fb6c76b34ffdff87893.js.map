{"version":3,"file":"static/js/vendor.react-markdown.6fb6c76b34ffdff87893.js","mappings":"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","sources":["webpack://silkforest-web/../../node_modules/react-markdown/lib/index.js"],"sourcesContent":["// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n"],"names":["changelog","emptyPlugins","emptyRemarkRehypeOptions","allowDangerousHtml","safeProtocol","deprecations","from","id","to","Markdown","options","allowedElements","allowElement","children","className","components","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","use","file","value","deprecation","Object","hasOwn","mdastTree","parse","hastTree","runSync","type","tagName","properties","node","index","parent","splice","key","test","includes","String","remove","Fragment","ignoreInvalidStyle","jsx","jsxs","passKeys","passNode","colon","indexOf","questionMark","numberSign","slash","slice"],"sourceRoot":""}