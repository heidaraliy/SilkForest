{"version":3,"file":"static/js/239.41c3d0abe977e07b67d2.chunk.js","mappings":"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","sources":["webpack://silkforest-web/./src/components/docs/DocsContent.tsx","webpack://silkforest-web/./src/components/docs/DocsData.ts"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactMarkdown, { Components } from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport rehypeRaw from \"rehype-raw\";\nimport SilkForest from \"../../assets/SilkForest.png\";\nimport SilkGhost from \"../../assets/SilkGhost.png\";\nimport SilkGhostPluginWindow from \"../../assets/docs/SilkGhostPluginWindow.jpg\";\nimport { DOCS_SECTIONS } from \"./DocsData\";\nimport { PRODUCTS } from \"../products/ProductData\";\n\nconst LOGO_MAP: Record<string, string> = {\n  SilkForest,\n  SilkGhost,\n};\n\nconst IMAGE_MAP: Record<string, string> = {\n  SilkGhostPluginWindow,\n};\n\nconst BACKGROUND_MAP: Record<string, string> = PRODUCTS.reduce(\n  (acc, product) => ({\n    ...acc,\n    [product.name]: product.background,\n  }),\n  {}\n);\n\nconst DocsContent: React.FC = () => {\n  const [combinedMarkdown, setCombinedMarkdown] = useState<string>(\"\");\n\n  useEffect(() => {\n    // Get unique markdown files\n    const uniqueFiles = new Set<string>();\n    DOCS_SECTIONS.forEach((section) => {\n      section.children?.forEach((entry) => {\n        uniqueFiles.add(entry.file);\n      });\n    });\n\n    // Combine unique markdown files\n    const content = Array.from(uniqueFiles).join(\"\\n\\n---\\n\\n\");\n    setCombinedMarkdown(content);\n  }, []);\n\n  const processMarkdown = (content: string) => {\n    return content.replace(\n      /\\[IMAGE:(.*?):(.*?)\\]/g,\n      (match, imageName, imageType) => {\n        const imageSrc = IMAGE_MAP[imageName];\n        if (!imageSrc) {\n          console.warn(`Image not found: ${imageName}`);\n          return \"\";\n        }\n        return `<img \n          src=\"${imageSrc}\" \n          alt=\"${imageName}\" \n          class=\"doc-image doc-image-${imageType}\"\n          style=\"border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1);\"\n        />`;\n      }\n    );\n  };\n\n  return (\n    <div className=\"docs-content overflow-y-auto h-full bg-zinc-50 font-arimo tracking-tight\">\n      <div className=\"max-w-4xl mx-auto p-8 md:p-12\">\n        <ReactMarkdown\n          remarkPlugins={[remarkGfm]}\n          rehypePlugins={[rehypeRaw]}\n          components={{\n            h1: (props) => {\n              const text = String(props.children);\n              const logoMatch = text.match(/\\[LOGO:(.*?)\\]/);\n              if (logoMatch) {\n                const logoKey = logoMatch[1];\n                const logoSrc = LOGO_MAP[logoKey];\n                const bgColor = BACKGROUND_MAP[logoKey] || \"#71769d\";\n\n                return (\n                  <h1\n                    className=\"text-4xl font-bold mb-8 text-zinc-800 flex justify-center\"\n                    {...props}\n                  >\n                    <div\n                      className=\"rounded-lg p-4 shadow-2xl border-zinc-700 border-[3px]\"\n                      style={{ backgroundColor: bgColor }}\n                    >\n                      <img src={logoSrc} alt={logoKey} className=\"w-[24rem]\" />\n                    </div>\n                  </h1>\n                );\n              }\n\n              return (\n                <h1\n                  className=\"text-4xl font-bold mb-8 text-zinc-800\"\n                  {...props}\n                >\n                  {props.children}\n                </h1>\n              );\n            },\n            // Add custom styling for h2, h3, etc.\n            h2: (props) => (\n              <h2\n                className=\"text-3xl font-semibold mb-6 text-zinc-800\"\n                {...props}\n              >\n                {props.children}\n              </h2>\n            ),\n            h3: (props) => (\n              <h3\n                className=\"text-2xl font-semibold mb-4 text-zinc-800\"\n                {...props}\n              >\n                {props.children}\n              </h3>\n            ),\n            h4: (props) => (\n              <h4 className=\"text-xl font-medium mb-3 text-zinc-800\" {...props}>\n                {props.children}\n              </h4>\n            ),\n            p: (props) => (\n              <p\n                className=\"mb-6 text-zinc-700 leading-relaxed text-lg\"\n                {...props}\n              />\n            ),\n            ul: (props) => (\n              <ul\n                className=\"list-disc pl-8 mb-6 text-zinc-700 space-y-2\"\n                {...props}\n              />\n            ),\n            ol: (props) => (\n              <ol\n                className=\"list-decimal pl-8 mb-6 text-zinc-700 space-y-2\"\n                {...props}\n              />\n            ),\n            code: (props) => (\n              <code\n                className=\"bg-zinc-100 rounded px-2 py-1 text-sm text-zinc-800\"\n                {...props}\n              />\n            ),\n            pre: (props) => (\n              <pre\n                className=\"bg-zinc-100 rounded-lg p-6 mb-6 overflow-x-auto text-zinc-800\"\n                {...props}\n              />\n            ),\n            hr: () => <hr className=\"my-12 border-zinc-200\" />,\n          }}\n        >\n          {processMarkdown(combinedMarkdown)}\n        </ReactMarkdown>\n      </div>\n    </div>\n  );\n};\n\nexport default DocsContent;\n","import SilkGhostDocumentation from \"../../docs/silkghost/SilkGhostDocumentation.md\";\nimport Introduction from \"../../docs/general/Introduction.md\";\n\nexport interface DocSection {\n  title: string;\n  children?: DocEntry[];\n}\n\nexport interface DocEntry {\n  id: string;\n  title: string;\n  file: string;\n}\n\nexport const DOCS_SECTIONS: DocSection[] = [\n  {\n    title: \"SilkForest\",\n    children: [\n      {\n        id: \"general-introduction\",\n        title: \"Introduction\",\n        file: Introduction,\n      },\n    ],\n  },\n  {\n    title: \"SilkGhost\",\n    children: [\n      {\n        id: \"silk-ghost-introduction\",\n        title: \"Introduction\",\n        file: SilkGhostDocumentation,\n      },\n      {\n        id: \"silk-ghost-key-features\",\n        title: \"Key Features\",\n        file: SilkGhostDocumentation,\n      },\n      {\n        id: \"silk-ghost-getting-started\",\n        title: \"Getting Started\",\n        file: SilkGhostDocumentation,\n      },\n      {\n        id: \"silk-ghost-parameter-reference\",\n        title: \"Parameter Reference\",\n        file: SilkGhostDocumentation,\n      },\n      {\n        id: \"silk-ghost-creative-applications\",\n        title: \"Creative Applications\",\n        file: SilkGhostDocumentation,\n      },\n    ],\n  },\n];\n"],"names":["LOGO_MAP","SilkForest","SilkGhost","IMAGE_MAP","SilkGhostPluginWindow","BACKGROUND_MAP","PRODUCTS","reduce","acc","product","_objectSpread","_defineProperty","name","background","_useState2","_slicedToArray","useState","combinedMarkdown","setCombinedMarkdown","useEffect","uniqueFiles","Set","DOCS_SECTIONS","forEach","section","_section$children","children","entry","add","file","content","Array","from","join","React","className","ReactMarkdown","remarkPlugins","remarkGfm","rehypePlugins","rehypeRaw","components","h1","props","logoMatch","String","match","logoKey","logoSrc","bgColor","_extends","style","backgroundColor","src","alt","h2","h3","h4","p","ul","ol","code","pre","hr","replace","imageName","imageType","imageSrc","concat","console","warn","title","id","SilkGhostDocumentation"],"sourceRoot":""}