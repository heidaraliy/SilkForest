{"version":3,"file":"static/js/vendor.d3-scale.ae9f1e24e0f2b95379f2.js","mappings":"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","sources":["webpack://silkforest-web/../../node_modules/d3-scale/src/band.js","webpack://silkforest-web/../../node_modules/d3-scale/src/continuous.js","webpack://silkforest-web/../../node_modules/d3-scale/src/constant.js","webpack://silkforest-web/../../node_modules/d3-scale/src/identity.js","webpack://silkforest-web/../../node_modules/d3-scale/src/nice.js","webpack://silkforest-web/../../node_modules/d3-scale/src/log.js","webpack://silkforest-web/../../node_modules/d3-scale/src/symlog.js","webpack://silkforest-web/../../node_modules/d3-scale/src/pow.js","webpack://silkforest-web/../../node_modules/d3-scale/src/radial.js","webpack://silkforest-web/../../node_modules/d3-scale/src/quantile.js","webpack://silkforest-web/../../node_modules/d3-scale/src/quantize.js","webpack://silkforest-web/../../node_modules/d3-scale/src/threshold.js","webpack://silkforest-web/../../node_modules/d3-scale/src/time.js","webpack://silkforest-web/../../node_modules/d3-scale/src/utcTime.js","webpack://silkforest-web/../../node_modules/d3-scale/src/sequential.js","webpack://silkforest-web/../../node_modules/d3-scale/src/sequentialQuantile.js","webpack://silkforest-web/../../node_modules/d3-scale/src/diverging.js","webpack://silkforest-web/../../node_modules/d3-scale/src/init.js","webpack://silkforest-web/../../node_modules/d3-scale/src/linear.js","webpack://silkforest-web/../../node_modules/d3-scale/src/number.js","webpack://silkforest-web/../../node_modules/d3-scale/src/ordinal.js","webpack://silkforest-web/../../node_modules/d3-scale/src/tickFormat.js"],"sourcesContent":["import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","import {linearish} from \"./linear.js\";\nimport number from \"./number.js\";\n\nexport default function identity(domain) {\n  var unknown;\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? Array.from(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n","export default function nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format, formatSpecifier} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : x => Math.pow(base, x);\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), x => Math.log(x) / base);\n}\n\nfunction reflect(f) {\n  return (x, k) => -f(-x, k);\n}\n\nexport function loggish(transform) {\n  const scale = transform(transformLog, transformExp);\n  const domain = scale.domain;\n  let base = 10;\n  let logs;\n  let pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = count => {\n    const d = domain();\n    let u = d[0];\n    let v = d[d.length - 1];\n    const r = v < u;\n\n    if (r) ([u, v] = [v, u]);\n\n    let i = logs(u);\n    let j = logs(v);\n    let k;\n    let t;\n    const n = count == null ? 10 : +count;\n    let z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1; k < base; ++k) {\n          t = i < 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1; k >= 1; --k) {\n          t = i > 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = (count, specifier) => {\n    if (count == null) count = 10;\n    if (specifier == null) specifier = base === 10 ? \"s\" : \",\";\n    if (typeof specifier !== \"function\") {\n      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null) specifier.trim = true;\n      specifier = format(specifier);\n    }\n    if (count === Infinity) return specifier;\n    const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return d => {\n      let i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = () => {\n    return domain(nice(domain(), {\n      floor: x => pows(Math.floor(logs(x))),\n      ceil: x => pows(Math.ceil(logs(x)))\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  const scale = loggish(transformer()).domain([1, 10]);\n  scale.copy = () => copy(scale, log()).base(scale.base());\n  initRange.apply(scale, arguments);\n  return scale;\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, identity, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n","import continuous from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport number from \"./number.js\";\n\nfunction square(x) {\n  return Math.sign(x) * x * x;\n}\n\nfunction unsquare(x) {\n  return Math.sign(x) * Math.sqrt(Math.abs(x));\n}\n\nexport default function radial() {\n  var squared = continuous(),\n      range = [0, 1],\n      round = false,\n      unknown;\n\n  function scale(x) {\n    var y = unsquare(squared(x));\n    return isNaN(y) ? unknown : round ? Math.round(y) : y;\n  }\n\n  scale.invert = function(y) {\n    return squared.invert(square(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (squared.domain(_), scale) : squared.domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (squared.range((range = Array.from(_, number)).map(square)), scale) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return scale.range(_).round(true);\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, scale) : round;\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (squared.clamp(_), scale) : squared.clamp();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return radial(squared.domain(), range)\n        .round(round)\n        .clamp(squared.clamp())\n        .unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {ascending, bisect, quantileSorted as threshold} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {linearish} from \"./linear.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeTicks, timeTickInterval} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport nice from \"./nice.js\";\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {\n  var scale = continuous(),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval) {\n    var d = domain();\n    if (!interval || typeof interval.range !== \"function\") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);\n    return interval ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));\n  };\n\n  return scale;\n}\n\nexport default function time() {\n  return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","import {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcTicks, utcTickInterval} from \"d3-time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {calendar} from \"./time.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function utcTime() {\n  return initRange.apply(calendar(utcTicks, utcTickInterval, utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n","import {interpolate, interpolateRound} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1;\n      return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n","import {ascending, bisect, quantile} from \"d3-array\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\n\nexport default function sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (x != null && !isNaN(x = +x)) return interpolator((bisect(domain, x, 1) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.range = function() {\n    return domain.map((d, i) => interpolator(i / (domain.length - 1)));\n  };\n\n  scale.quantiles = function(n) {\n    return Array.from({length: n + 1}, (_, i) => quantile(domain, i / n));\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n","import {interpolate, interpolateRound, piecewise} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {copy} from \"./sequential.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      s = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1, r2;\n      return arguments.length ? ([r0, r1, r2] = _, interpolator = piecewise(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","export default function number(x) {\n  return +x;\n}\n","import {InternMap} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new InternMap(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    let i = index.get(d);\n    if (i === undefined) {\n      if (unknown !== implicit) return unknown;\n      index.set(d, i = domain.push(d) - 1);\n    }\n    return range[i % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new InternMap();\n    for (const value of _) {\n      if (index.has(value)) continue;\n      index.set(value, domain.push(value) - 1);\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n"],"names":["band","step","bandwidth","scale","unknown","undefined","domain","ordinalRange","range","r0","r1","round","paddingInner","paddingOuter","align","rescale","n","length","reverse","start","stop","Math","max","floor","values","map","i","_","arguments","rangeRound","padding","min","copy","apply","pointish","point","unit","identity","x","normalize","a","b","isNaN","NaN","bimap","interpolate","d0","d1","polymap","j","d","Array","r","slice","bisect","source","target","clamp","transformer","transform","untransform","piecewise","output","input","t","invert","y","from","u","continuous","number","linear","nice","interval","i0","i1","x0","x1","ceil","transformLog","log","transformExp","exp","transformLogn","transformExpn","pow10","isFinite","reflect","f","k","loggish","logs","pows","base","E","log10","log2","logp","pow","powp","ticks","count","v","z","push","tickFormat","specifier","formatSpecifier","precision","trim","Infinity","init","transformSymlog","c","sign","log1p","abs","transformSymexp","expm1","symlogish","constant","symlog","transformPow","exponent","transformSqrt","sqrt","transformSquare","powish","square","radial","squared","unsquare","thresholds","invertExtent","indexOf","sort","ascending","quantiles","quantize","threshold","date","Date","calendar","tickInterval","year","month","week","day","hour","minute","second","format","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","time","utcTime","UTC","t0","t1","k10","interpolator","sequential","sequentialLog","sequentialSymlog","sequentialPow","sequentialSqrt","sequentialQuantile","quantile","t2","k21","x2","s","r2","diverging","divergingLog","divergingSymlog","divergingPow","divergingSqrt","initRange","this","initInterpolator","linearish","prestep","maxIter","implicit","Symbol","ordinal","index","get","set","value","has","type"],"sourceRoot":""}