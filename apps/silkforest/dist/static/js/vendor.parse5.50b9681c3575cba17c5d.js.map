{"version":3,"file":"static/js/vendor.parse5.50b9681c3575cba17c5d.js","mappings":"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","sources":["webpack://silkforest-web/../../node_modules/parse5/dist/common/unicode.js","webpack://silkforest-web/../../node_modules/parse5/dist/common/error-codes.js","webpack://silkforest-web/../../node_modules/parse5/dist/tokenizer/preprocessor.js","webpack://silkforest-web/../../node_modules/parse5/dist/common/token.js","webpack://silkforest-web/../../node_modules/parse5/node_modules/entities/lib/esm/generated/decode-data-html.js","webpack://silkforest-web/../../node_modules/parse5/node_modules/entities/lib/esm/generated/decode-data-xml.js","webpack://silkforest-web/../../node_modules/parse5/node_modules/entities/lib/esm/decode_codepoint.js","webpack://silkforest-web/../../node_modules/parse5/node_modules/entities/lib/esm/decode.js","webpack://silkforest-web/../../node_modules/parse5/dist/common/html.js","webpack://silkforest-web/../../node_modules/parse5/dist/tokenizer/index.js","webpack://silkforest-web/../../node_modules/parse5/dist/parser/open-element-stack.js","webpack://silkforest-web/../../node_modules/parse5/dist/parser/formatting-element-list.js","webpack://silkforest-web/../../node_modules/parse5/dist/tree-adapters/default.js","webpack://silkforest-web/../../node_modules/parse5/dist/common/doctype.js","webpack://silkforest-web/../../node_modules/parse5/dist/common/foreign-content.js","webpack://silkforest-web/../../node_modules/parse5/dist/parser/index.js","webpack://silkforest-web/../../node_modules/parse5/node_modules/entities/lib/esm/escape.js","webpack://silkforest-web/../../node_modules/parse5/dist/serializer/index.js"],"sourcesContent":["const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n","import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n","import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n","export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n"],"names":["UNDEFINED_CODE_POINTS","Set","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","has","ERR","Preprocessor","constructor","handler","this","html","pos","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","line","lastErrOffset","col","Number","offset","getError","code","cpOffset","startCol","startOffset","startLine","endLine","endCol","endOffset","_err","onParseError","_addGap","push","_processSurrogate","length","nextCp","charCodeAt","isSurrogatePair","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","substring","write","chunk","isLastChunk","insertHtmlAtCurrentPos","startsWith","pattern","caseSensitive","i","peek","CARRIAGE_RETURN","LINE_FEED","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","count","pop","TokenType","getTokenAttr","token","attrName","attrs","name","value","Uint16Array","split","map","c","_a","decodeMap","Map","fromCodePoint","String","codePoint","output","fromCharCode","replaceCodePoint","get","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isEntityInAttributeInvalidEnd","EQUALS","UPPER_A","UPPER_Z","LOWER_A","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","state","EntityStart","consumed","result","treeIndex","excess","decodeMode","Strict","startEntity","str","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","start","end","base","digitCount","Math","pow","parseInt","substr","startIdx","char","UPPER_F","LOWER_F","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","lastIndex","indexOf","slice","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","NS","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SEARCH","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","tagName","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","NUMBERED_HEADERS","UNESCAPED_TEXT","tn","scriptingEnabled","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","DIGIT_0","DIGIT_9","isAsciiDigit","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","options","paused","inLoop","inForeignNode","lastStartTagName","active","returnState","entityStartPos","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","entityDecoder","_flushCodePointConsumedAsCharacterReference","error","NULL","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","getErrorForNumericCharacterReference","undefined","_b","call","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","resume","writeCallback","Error","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","type","START_TAG","tagID","selfClosing","ackSelfClosing","location","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","data","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","publicId","systemId","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","Object","create","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","_emitChars","_startCharacterReference","CHARACTER_REFERENCE","_isCharacterReferenceInAttribute","Legacy","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","_stateCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","LESS_THAN_SIGN","AMPERSAND","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","EQUALS_SIGN","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","SEMICOLON","unknownNamedCharacterReference","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENTS_HTML","SCOPING_ELEMENTS_HTML_LIST","SCOPING_ELEMENTS_HTML_BUTTON","SCOPING_ELEMENTS_MATHML","SCOPING_ELEMENTS_SVG","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","document","items","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","element","lastIndexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","replace","oldElement","newElement","idx","insertAfter","referenceElement","newElementID","insertionIdx","splice","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","namespace","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInDynamicScope","htmlScope","hasInScope","hasInListItemScope","hasInButtonScope","hasNumberedHeaderInScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","entries","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","entry","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","insertMarker","unshift","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","removeEntry","entryIndex","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","find","getElementEntry","defaultTreeAdapter","createDocument","nodeName","mode","NO_QUIRKS","childNodes","createDocumentFragment","createElement","namespaceURI","parentNode","createCommentNode","createTextNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","content","setDocumentType","doctypeNode","node","setDocumentMode","getDocumentMode","detachNode","insertText","text","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","prototype","hasOwnProperty","setNodeSourceCodeLocation","sourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","some","prefix","MIME_TYPES","SVG_ATTRS_ADJUSTMENT_MAP","toLowerCase","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","ns","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","parse","parser","getFragmentParser","opts","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","fragment","_adoptNodes","beforeToken","loc","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","startTag","_shouldFosterParentOnInsertion","_fosterParentElement","parent","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","siblings","textNodeIdx","donor","child","closingToken","ctLoc","endLoc","endTag","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","_reconstructActiveFormattingElements","listLength","endIndex","findIndex","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","id","p","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","target","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","shift","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","TYPE","rawTextStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","xmlCodeMap","codePointAt","getEscaper","regex","match","lastIdx","exec","index"],"sourceRoot":""}