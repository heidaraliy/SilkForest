{"version":3,"file":"static/js/vendor.rehype-raw.2f7fb31788fa8c11efea.js","mappings":"6IAqBe,SAASA,EAAUC,GAShC,OAAO,SAAUC,EAAMC,GAGrB,OADoC,OAAID,EAAM,IAAID,EAASE,QAE7D,CACF,C","sources":["webpack://silkforest-web/../../node_modules/rehype-raw/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n"],"names":["rehypeRaw","options","tree","file"],"sourceRoot":""}