{"version":3,"file":"static/js/vendor.framer-motion.fbb00471c1127b5df1cf.js","mappings":"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","sources":["webpack://silkforest-web/../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/easing/back.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/array.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/index.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/index.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/store.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://silkforest-web/../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { invariant } from 'motion-utils';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, exitBeforeEnter, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = presentChildren === renderedChildren ||\n                presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant, noop } from 'motion-utils';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from 'motion-utils';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from 'motion-utils';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.15.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from 'motion-dom';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from 'motion-utils';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from 'motion-utils';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from 'motion-utils';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.15.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.15.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","exitBeforeEnter","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","L","Fragment","undefined","has","isEveryExitComplete","isExitComplete","createContext","transformPagePoint","p","isStatic","reducedMotion","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","state","getVelocity","resolveVariantFromProps","definition","velocity","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","startsWith","sqrt","getValueTransition","transition","MotionGlobalConfig","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","index","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","keepAlive","immediate","queue","add","cancel","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","postRender","processBatch","performance","now","max","min","cancelFrame","frameSteps","requestAnimationFrame","noop","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","scale","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","paddingLeft","paddingRight","y","paddingTop","paddingBottom","bottom","right","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","getValue","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","progress","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","visualDuration","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","transformers","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","parent","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","unmount","arguments","prevIsPresent","prevPresenceContext","exitAnimation","extractEventInfo","event","point","pageX","pageY","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useEffect","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","endEvent","success","useGlobalTarget","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","MotionContext","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","motion","isBrowser","useConstant","useIsomorphicLayoutEffect","useLayoutEffect"],"sourceRoot":""}