{"version":3,"file":"static/js/vendor.d3-time.e909c86a2b7aa323a705.js","mappings":"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","sources":["webpack://silkforest-web/../../node_modules/d3-time/src/day.js","webpack://silkforest-web/../../node_modules/d3-time/src/duration.js","webpack://silkforest-web/../../node_modules/d3-time/src/hour.js","webpack://silkforest-web/../../node_modules/d3-time/src/interval.js","webpack://silkforest-web/../../node_modules/d3-time/src/minute.js","webpack://silkforest-web/../../node_modules/d3-time/src/month.js","webpack://silkforest-web/../../node_modules/d3-time/src/second.js","webpack://silkforest-web/../../node_modules/d3-time/src/millisecond.js","webpack://silkforest-web/../../node_modules/d3-time/src/ticks.js","webpack://silkforest-web/../../node_modules/d3-time/src/week.js","webpack://silkforest-web/../../node_modules/d3-time/src/year.js"],"sourcesContent":["import {timeInterval} from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nexport const timeDay = timeInterval(\n  date => date.setHours(0, 0, 0, 0),\n  (date, step) => date.setDate(date.getDate() + step),\n  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,\n  date => date.getDate() - 1\n);\n\nexport const timeDays = timeDay.range;\n\nexport const utcDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return date.getUTCDate() - 1;\n});\n\nexport const utcDays = utcDay.range;\n\nexport const unixDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return Math.floor(date / durationDay);\n});\n\nexport const unixDays = unixDay.range;\n","export const durationSecond = 1000;\nexport const durationMinute = durationSecond * 60;\nexport const durationHour = durationMinute * 60;\nexport const durationDay = durationHour * 24;\nexport const durationWeek = durationDay * 7;\nexport const durationMonth = durationDay * 30;\nexport const durationYear = durationDay * 365;\n","import {timeInterval} from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nexport const timeHour = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getHours();\n});\n\nexport const timeHours = timeHour.range;\n\nexport const utcHour = timeInterval((date) => {\n  date.setUTCMinutes(0, 0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getUTCHours();\n});\n\nexport const utcHours = utcHour.range;\n","const t0 = new Date, t1 = new Date;\n\nexport function timeInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = (date) => {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = (date) => {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = (date) => {\n    const d0 = interval(date), d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = (date, step) => {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = (start, stop, step) => {\n    const range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    let previous;\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = (test) => {\n    return timeInterval((date) => {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, (date, step) => {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = (start, end) => {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = (step) => {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? (d) => field(d) % step === 0\n              : (d) => interval.count(0, d) % step === 0);\n    };\n  }\n\n  return interval;\n}\n","import {timeInterval} from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nexport const timeMinute = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, (date) => {\n  return date.getMinutes();\n});\n\nexport const timeMinutes = timeMinute.range;\n\nexport const utcMinute = timeInterval((date) => {\n  date.setUTCSeconds(0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, (date) => {\n  return date.getUTCMinutes();\n});\n\nexport const utcMinutes = utcMinute.range;\n","import {timeInterval} from \"./interval.js\";\n\nexport const timeMonth = timeInterval((date) => {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setMonth(date.getMonth() + step);\n}, (start, end) => {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, (date) => {\n  return date.getMonth();\n});\n\nexport const timeMonths = timeMonth.range;\n\nexport const utcMonth = timeInterval((date) => {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, (start, end) => {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, (date) => {\n  return date.getUTCMonth();\n});\n\nexport const utcMonths = utcMonth.range;\n","import {timeInterval} from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nexport const second = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds());\n}, (date, step) => {\n  date.setTime(+date + step * durationSecond);\n}, (start, end) => {\n  return (end - start) / durationSecond;\n}, (date) => {\n  return date.getUTCSeconds();\n});\n\nexport const seconds = second.range;\n","import {timeInterval} from \"./interval.js\";\n\nexport const millisecond = timeInterval(() => {\n  // noop\n}, (date, step) => {\n  date.setTime(+date + step);\n}, (start, end) => {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = (k) => {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return timeInterval((date) => {\n    date.setTime(Math.floor(date / k) * k);\n  }, (date, step) => {\n    date.setTime(+date + step * k);\n  }, (start, end) => {\n    return (end - start) / k;\n  });\n};\n\nexport const milliseconds = millisecond.range;\n","import {bisector, tickStep} from \"d3-array\";\nimport {durationDay, durationHour, durationMinute, durationMonth, durationSecond, durationWeek, durationYear} from \"./duration.js\";\nimport {millisecond} from \"./millisecond.js\";\nimport {second} from \"./second.js\";\nimport {timeMinute, utcMinute} from \"./minute.js\";\nimport {timeHour, utcHour} from \"./hour.js\";\nimport {timeDay, unixDay} from \"./day.js\";\nimport {timeSunday, utcSunday} from \"./week.js\";\nimport {timeMonth, utcMonth} from \"./month.js\";\nimport {timeYear, utcYear} from \"./year.js\";\n\nfunction ticker(year, month, week, day, hour, minute) {\n\n  const tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function ticks(start, stop, count) {\n    const reverse = stop < start;\n    if (reverse) [start, stop] = [stop, start];\n    const interval = count && typeof count.range === \"function\" ? count : tickInterval(start, stop, count);\n    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n    return reverse ? ticks.reverse() : ticks;\n  }\n\n  function tickInterval(start, stop, count) {\n    const target = Math.abs(stop - start) / count;\n    const i = bisector(([,, step]) => step).right(tickIntervals, target);\n    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));\n    if (i === 0) return millisecond.every(Math.max(tickStep(start, stop, count), 1));\n    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n    return t.every(step);\n  }\n\n  return [ticks, tickInterval];\n}\n\nconst [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcSunday, unixDay, utcHour, utcMinute);\nconst [timeTicks, timeTickInterval] = ticker(timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute);\n\nexport {utcTicks, utcTickInterval, timeTicks, timeTickInterval};\n","import {timeInterval} from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction timeWeekday(i) {\n  return timeInterval((date) => {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setDate(date.getDate() + step * 7);\n  }, (start, end) => {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport const timeSunday = timeWeekday(0);\nexport const timeMonday = timeWeekday(1);\nexport const timeTuesday = timeWeekday(2);\nexport const timeWednesday = timeWeekday(3);\nexport const timeThursday = timeWeekday(4);\nexport const timeFriday = timeWeekday(5);\nexport const timeSaturday = timeWeekday(6);\n\nexport const timeSundays = timeSunday.range;\nexport const timeMondays = timeMonday.range;\nexport const timeTuesdays = timeTuesday.range;\nexport const timeWednesdays = timeWednesday.range;\nexport const timeThursdays = timeThursday.range;\nexport const timeFridays = timeFriday.range;\nexport const timeSaturdays = timeSaturday.range;\n\nfunction utcWeekday(i) {\n  return timeInterval((date) => {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, (start, end) => {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport const utcSunday = utcWeekday(0);\nexport const utcMonday = utcWeekday(1);\nexport const utcTuesday = utcWeekday(2);\nexport const utcWednesday = utcWeekday(3);\nexport const utcThursday = utcWeekday(4);\nexport const utcFriday = utcWeekday(5);\nexport const utcSaturday = utcWeekday(6);\n\nexport const utcSundays = utcSunday.range;\nexport const utcMondays = utcMonday.range;\nexport const utcTuesdays = utcTuesday.range;\nexport const utcWednesdays = utcWednesday.range;\nexport const utcThursdays = utcThursday.range;\nexport const utcFridays = utcFriday.range;\nexport const utcSaturdays = utcSaturday.range;\n","import {timeInterval} from \"./interval.js\";\n\nexport const timeYear = timeInterval((date) => {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setFullYear(date.getFullYear() + step);\n}, (start, end) => {\n  return end.getFullYear() - start.getFullYear();\n}, (date) => {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\ntimeYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport const timeYears = timeYear.range;\n\nexport const utcYear = timeInterval((date) => {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, (start, end) => {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, (date) => {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport const utcYears = utcYear.range;\n"],"names":["timeDay","date","setHours","step","setDate","getDate","start","end","getTimezoneOffset","utcDay","range","setUTCHours","setUTCDate","getUTCDate","unixDay","Math","floor","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","timeHour","setTime","getMilliseconds","getSeconds","getMinutes","getHours","utcHour","setUTCMinutes","getUTCHours","t0","Date","t1","timeInterval","floori","offseti","count","field","interval","arguments","length","ceil","round","d0","d1","offset","stop","previous","push","filter","test","every","isFinite","d","timeMinute","utcMinute","setUTCSeconds","getUTCMinutes","timeMonth","setMonth","getMonth","getFullYear","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","second","getUTCSeconds","millisecond","k","ticker","year","month","week","day","hour","minute","tickIntervals","duration","tickInterval","target","abs","i","bisector","right","max","t","reverse","ticks","utcTicks","utcTickInterval","timeTicks","timeTickInterval","timeWeekday","getDay","timeSunday","timeMonday","timeTuesday","timeWednesday","timeThursday","timeFriday","timeSaturday","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","timeYear","setFullYear","utcYear","setUTCFullYear"],"sourceRoot":""}