{"version":3,"file":"static/js/105.d314d42bab5cdf2aec22.chunk.js","mappings":"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","sources":["webpack://silkforest-web/./src/components/docs/DocsData.ts","webpack://silkforest-web/./src/components/docs/DocsSidebar.tsx"],"sourcesContent":["import SilkGhostDocumentation from \"../../docs/silkghost/SilkGhostDocumentation.md\";\nimport Introduction from \"../../docs/general/Introduction.md\";\n\nexport interface DocSection {\n  title: string;\n  children?: DocEntry[];\n}\n\nexport interface DocEntry {\n  id: string;\n  title: string;\n  file: string;\n}\n\nexport const DOCS_SECTIONS: DocSection[] = [\n  {\n    title: \"SilkForest\",\n    children: [\n      {\n        id: \"general-introduction\",\n        title: \"Introduction\",\n        file: Introduction,\n      },\n    ],\n  },\n  {\n    title: \"SilkGhost\",\n    children: [\n      {\n        id: \"silk-ghost-introduction\",\n        title: \"Introduction\",\n        file: SilkGhostDocumentation,\n      },\n      {\n        id: \"silk-ghost-key-features\",\n        title: \"Key Features\",\n        file: SilkGhostDocumentation,\n      },\n      {\n        id: \"silk-ghost-getting-started\",\n        title: \"Getting Started\",\n        file: SilkGhostDocumentation,\n      },\n      {\n        id: \"silk-ghost-parameter-reference\",\n        title: \"Parameter Reference\",\n        file: SilkGhostDocumentation,\n      },\n      {\n        id: \"silk-ghost-creative-applications\",\n        title: \"Creative Applications\",\n        file: SilkGhostDocumentation,\n      },\n    ],\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { DOCS_SECTIONS } from \"./DocsData\";\nimport SilkDocs from \"../../assets/SilkDocs.png\";\nimport SilkForestSidebarBackground from \"../../assets/backgrounds/SilkForestSidebarBG.jpg\";\n\nconst DocsSidebar: React.FC = () => {\n  const [activeId, setActiveId] = useState<string>(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setActiveId(entry.target.id);\n            const newUrl = `${window.location.pathname}#${entry.target.id}`;\n            window.history.replaceState(null, \"\", newUrl);\n          }\n        });\n      },\n      { rootMargin: \"-20% 0px -80% 0px\" }\n    );\n\n    document.querySelectorAll(\"h1[id], h2[id], h3[id]\").forEach((section) => {\n      observer.observe(section);\n    });\n\n    return () => observer.disconnect();\n  }, []);\n\n  useEffect(() => {\n    const hash = location.hash.slice(1);\n    if (hash) {\n      setActiveId(hash);\n    }\n  }, [location]);\n\n  const sidebarContent = (\n    <div\n      className=\"h-[calc(100vh-5.5rem)] border-r-2 border-zinc-400 overflow-y-auto\"\n      style={{\n        backgroundImage: `url(${SilkForestSidebarBackground})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center bottom\",\n      }}\n    >\n      <div className=\"sticky top-0 p-6 w-72\">\n        <div className=\"text-center m-4\">\n          <img src={SilkDocs} alt=\"SilkDocs\" className=\"mx-auto w-48\" />\n        </div>\n        <nav className=\"space-y-6 bg-[#4d516e]/75 rounded-md p-4 border-zinc-400 border-2\">\n          {DOCS_SECTIONS.map((section) => (\n            <div key={section.title} className=\"mb-6\">\n              <div className=\"text-2xl text-zinc-50 mb-3 p-2 font-vidaloka\">\n                {section.title}\n              </div>\n              <ul className=\"space-y-3 pl-2 text-xl\">\n                {section.children?.map((entry) => (\n                  <li key={entry.id}>\n                    <Link\n                      to={`/docs#${entry.id}`}\n                      onClick={() => setIsOpen(false)}\n                      className={`block text-base transition-all duration-300 rounded-md p-1.5 font-arimo tracking-tight ${\n                        activeId === entry.id\n                          ? \"text-zinc-50 font-semibold bg-zinc-300/20 scale-110 border-zinc-300/70 border-2\"\n                          : \"text-zinc-100 font-extralight hover:bg-zinc-300/20 hover:text-zinc-50 hover:scale-105 transition-all duration-300 cursor-pointer\"\n                      }`}\n                    >\n                      {entry.title}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </nav>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      {/* Mobile Sidebar */}\n      <div className=\"md:hidden\">\n        <button\n          onClick={() => setIsOpen(!isOpen)}\n          className={`fixed top-24 z-40 bg-zinc-200 border-zinc-600 border-2 text-zinc-50 p-2 rounded-r-md transition-all duration-300 shadow-lg ${\n            isOpen ? \"left-72\" : \"left-0\"\n          }`}\n          aria-label=\"Toggle documentation sidebar\"\n        >\n          <span className=\"material-symbols-outlined text-zinc-700 text-2xl\">\n            {isOpen ? \"chevron_left\" : \"chevron_right\"}\n          </span>\n        </button>\n\n        <div\n          className={`fixed top-[5.5rem] bottom-0 transition-all duration-300 ease-in-out ${\n            isOpen ? \"left-0\" : \"-left-72\"\n          }`}\n        >\n          {sidebarContent}\n        </div>\n      </div>\n\n      {/* Desktop Sidebar */}\n      <div className=\"hidden md:block h-[calc(100vh-5.5rem)] fixed\">\n        {sidebarContent}\n      </div>\n    </>\n  );\n};\n\nexport default DocsSidebar;\n"],"names":["DOCS_SECTIONS","title","children","id","file","SilkGhostDocumentation","_useState2","_slicedToArray","useState","activeId","setActiveId","_useState4","isOpen","setIsOpen","location","useLocation","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","newUrl","concat","window","pathname","history","replaceState","rootMargin","document","querySelectorAll","section","observe","disconnect","hash","slice","sidebarContent","React","className","style","backgroundImage","SilkForestSidebarBackground","backgroundSize","backgroundPosition","src","SilkDocs","alt","map","_section$children","key","Link","to","onClick"],"sourceRoot":""}