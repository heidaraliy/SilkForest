{"version":3,"file":"static/js/vendor.remark-gfm.d601488e7b4017b151ea.js","mappings":"yJAmBA,MAAMA,EAAe,CAAC,EAWP,SAASC,EAAUC,GAGhC,MACMC,EAAWD,GAAWF,EACtBI,EAFgC,KAEpBA,OAEZC,EACJD,EAAKC,sBAAwBD,EAAKC,oBAAsB,IACpDC,EACJF,EAAKE,yBAA2BF,EAAKE,uBAAyB,IAC1DC,EACJH,EAAKG,uBAAyBH,EAAKG,qBAAuB,IAE5DF,EAAoBG,MAAK,OAAIL,IAC7BG,EAAuBE,MAAK,UAC5BD,EAAqBC,MAAK,OAAcL,GAC1C,C","sources":["webpack://silkforest-web/../../node_modules/remark-gfm/lib/index.js"],"sourcesContent":["/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-gfm').Options} MdastOptions\n * @typedef {import('micromark-extension-gfm').Options} MicromarkOptions\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {MicromarkOptions & MdastOptions} Options\n *   Configuration.\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n"],"names":["emptyOptions","remarkGfm","options","settings","data","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","push"],"sourceRoot":""}